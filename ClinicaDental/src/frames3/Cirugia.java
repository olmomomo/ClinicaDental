/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frames;
import java.awt.Font;
import java.awt.Image;
import java.awt.Insets;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
/**
 *
 * @author busta
 */
public class Cirugia extends javax.swing.JFrame {

    /**
     * Creates new form Cirugia
     */
    public Cirugia() {
        initComponents();
        configurarVentana();
        configurarLogo();
        configurarTexto();
    }
private void configurarVentana() {
        setTitle("Ortodoncia - Informaci√≥n");
        setSize(600, 500); // Aument√© un poco el tama√±o para mejor visualizaci√≥n
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
 private void configurarLogo() {
        try {
            ImageIcon logo = new ImageIcon(getClass().getResource("/imagenes/LogoCD.png"));
            if (logo.getImage() != null) {
                Image imagenEscalada = logo.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
                lblLogo.setIcon(new ImageIcon(imagenEscalada));
            }
        } catch (Exception e) {
            System.out.println("No se pudo cargar la imagen: " + e.getMessage());
        }
    }
 
 private void configurarTexto() {
    String texto = "CIRUG√çA DENTAL - EXTRACCI√ìN DE TERCEROS MOLARES\n\n"
            + "¬øQu√© es la cirug√≠a de terceros molares?\n"
            + "Procedimiento quir√∫rgico para extraer las muelas del juicio (terceros molares),\n"
            + "cuando est√°n retenidas, mal posicionadas o provocan dolor, infecciones o da√±o a dientes adyacentes.\n\n"

            + "‚û§ PASO 1: DIAGN√ìSTICO Y PLANIFICACI√ìN\n"
            + "‚Ä¢ Historia cl√≠nica y radiograf√≠a panor√°mica (ubicar posici√≥n de las muelas)\n"
            + "‚Ä¢ Evaluaci√≥n de nervios, ra√≠ces y grado de retenci√≥n\n"
            + "‚Ä¢ Explicaci√≥n del procedimiento y cuidados al paciente\n\n"

            + "‚û§ PASO 2: ANESTESIA Y PREPARACI√ìN\n"
            + "‚Ä¢ Anestesia local (en algunos casos anestesia general o sedaci√≥n)\n"
            + "‚Ä¢ Aislamiento y desinfecci√≥n del √°rea quir√∫rgica\n\n"

            + "‚û§ PASO 3: EXTRACCI√ìN QUIR√öRGICA\n"
            + "‚Ä¢ Incisi√≥n en enc√≠a para exponer el diente y hueso circundante\n"
            + "‚Ä¢ Retiro de hueso si es necesario (fresas quir√∫rgicas)\n"
            + "‚Ä¢ Secci√≥n del diente en partes (si est√° impactado)\n"
            + "‚Ä¢ Extracci√≥n completa del molar\n\n"

            + "‚û§ PASO 4: CIERRE Y MEDICACI√ìN\n"
            + "‚Ä¢ Limpieza de la zona quir√∫rgica\n"
            + "‚Ä¢ Sutura (puntos reabsorbibles o de retiro posterior)\n"
            + "‚Ä¢ Prescripci√≥n de antibi√≥ticos y analg√©sicos\n\n"

            + "üìå DATOS CLAVE:\n"
            + "‚Ä¢ Duraci√≥n: 30-60 minutos por diente\n"
            + "‚Ä¢ Tiempo de recuperaci√≥n: 7-10 d√≠as\n"
            + "‚Ä¢ Puede presentarse inflamaci√≥n y dolor leve a moderado\n"
            + "‚Ä¢ Se recomienda extracci√≥n entre los 16 y 25 a√±os (mejor cicatrizaci√≥n)\n\n"

            + "‚ö† CUIDADOS POSTERIORES:\n"
            + "- Aplicar compresas fr√≠as en el √°rea durante las primeras 24 horas\n"
            + "- Evitar enjuagues vigorosos o succionar con popote (previene alveolitis)\n"
            + "- Dieta blanda y fr√≠a los primeros d√≠as\n"
            + "- Mantener higiene cuidadosa sin tocar la herida\n"
            + "- Asistir a control para retirar suturas si es necesario";

    txtDescripcion.setText(texto);
    txtDescripcion.setEditable(false);
    txtDescripcion.setLineWrap(true);
    txtDescripcion.setWrapStyleWord(true);
    txtDescripcion.setFont(new Font("Arial", Font.PLAIN, 14));
    txtDescripcion.setMargin(new Insets(10, 15, 10, 15));
    txtDescripcion.setCaretPosition(0);
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblLogo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(253, 247, 229));

        jLabel1.setBackground(new java.awt.Color(76, 103, 112));
        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel1.setText("Cirugia ");

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtDescripcion);

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(btnRegresar)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRegresar)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        new Procedimientos().setVisible(true); 
         dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cirugia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cirugia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cirugia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cirugia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cirugia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JTextArea txtDescripcion;
    // End of variables declaration//GEN-END:variables
}
